(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{ExI0:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return i})),n.d(t,"default",(function(){return s}));var a=n("Fcif"),l=n("+I+c"),r=(n("mXGw"),n("/FXl")),o=n("TjRS"),u=n("F9PQ"),i=(n("aD51"),{});void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/useThrottledValue.mdx"}});var b={_frontmatter:i},c=o.a;function s(e){var t=e.components,n=Object(l.a)(e,["components"]);return Object(r.b)(c,Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"usethrottledvalue"},"useThrottledValue"),Object(r.b)("p",null,"Throttle a value when it is changed."),Object(r.b)("h2",{id:"usage"},"Usage"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"function useThrottledValue<T = any>(\n  value: T,\n  wait?: number\n): [\n  throttledValue: T,\n  {\n    flush: (finalValue?: T) => void;\n    cancel: () => void;\n  }\n];\n")),Object(r.b)("p",null,"Params:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"value"),":")," value that will be changed."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"wait"),":")," wait time, in milliseconds, default is 0.")),Object(r.b)("p",null,"Return:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"throttledValue"),":")," throttled value."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"flush"),":")," flush funciton. The ",Object(r.b)("inlineCode",{parentName:"li"},"finalValue")," will be returned as ",Object(r.b)("inlineCode",{parentName:"li"},"throttledValue"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"cancel"),":")," cancel throttle timer.")),Object(r.b)("h2",{id:"example"},"Example"),Object(r.b)(u.a,{mdxType:"Example"}),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx"}),'import React, { useState } from "react";\nimport { useThrottledValue } from "@fedlinker/hooks";\n\nfunction Example() {\n  const [value, setValue] = useState("");\n  const [throttledValue, { flush }] = useThrottledValue(value, 1000);\n\n  return (\n    <div>\n      <input\n        value={value}\n        onChange={(event) => setValue(event.target.value)}\n        placeholder="Please input..."\n      />\n      <button onClick={() => flush()}>Ok</button>\n      <div>Throttled value: {throttledValue}</div>\n    </div>\n  );\n}\n\nexport default Example;\n')))}void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/useThrottledValue.mdx"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-use-throttled-value-mdx-a67f9c7a92ce3ce5d571.js.map