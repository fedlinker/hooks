(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{"9aBk":function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return u})),t.d(n,"default",(function(){return b}));var o=t("Fcif"),r=t("+I+c"),a=(t("mXGw"),t("/FXl")),c=t("TjRS"),u=(t("aD51"),{});void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/useMounted.mdx"}});var s={_frontmatter:u},i=c.a;function b(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(a.b)(i,Object(o.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"usemounted"},"useMounted"),Object(a.b)("p",null,"Return ",Object(a.b)("inlineCode",{parentName:"p"},"false")," when the component first rendering, otherwise return ",Object(a.b)("inlineCode",{parentName:"p"},"true"),"."),Object(a.b)("h2",{id:"usage"},"Usage"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-ts"}),"function useMounted(): boolean;\n")),Object(a.b)("h2",{id:"example"},"Example"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-tsx"}),'import React, { useEffect } from "react";\nimport { useMounted, useRerender } from "@fedlinker/hooks";\n\nfunction Example() {\n  const mounted = useMounted();\n  const rerender = useRerender();\n\n  console.log("Is the component mounted: ", mounted ? "yes" : "no");\n\n  useEffect(() => {\n    rerender();\n  }, []);\n\n  ...\n}\n')))}void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/useMounted.mdx"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-use-mounted-mdx-b207167ed91461ed3b99.js.map