{"version":3,"sources":["webpack:///../docs/useThrottledValue.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"oQASaA,G,UAAe,S,4MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,qBADR,qBAGA,6DACA,iBAAQ,CACN,GAAM,SADR,SAGA,uBAAK,gCAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,kLAaL,gCACA,sBACE,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAK,0BAAYA,WAAW,UAAvB,SAAxB,KAApB,gCACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAK,0BAAYA,WAAW,UAAvB,QAAxB,KAApB,+CAEF,gCACA,sBACE,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAK,0BAAYA,WAAW,UAAvB,kBAAxB,KAApB,qBACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAK,0BAAYA,WAAW,UAAvB,SAAxB,KAApB,wBAAyI,0BAAYA,WAAW,MAAvB,cAAzI,wBAAyN,0BAAYA,WAAW,MAAvB,kBAAzN,KACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAK,0BAAYA,WAAW,UAAvB,UAAxB,KAApB,4BAEF,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAASD,QAAQ,YACjB,uBAAK,gCAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,wjB,0MA4BTJ,EAAWK,gBAAiB","file":"component---docs-use-throttled-value-mdx-a67f9c7a92ce3ce5d571.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/liweisheng/Projects/fedlinker/hooks/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport Example from \"./examples/ThrottledValue\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"usethrottledvalue\"\n    }}>{`useThrottledValue`}</h1>\n    <p>{`Throttle a value when it is changed.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`function useThrottledValue<T = any>(\n  value: T,\n  wait?: number\n): [\n  throttledValue: T,\n  {\n    flush: (finalValue?: T) => void;\n    cancel: () => void;\n  }\n];\n`}</code></pre>\n    <p>{`Params:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`value`}</inlineCode>{`:`}</strong>{` value that will be changed.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`wait`}</inlineCode>{`:`}</strong>{` wait time, in milliseconds, default is 0.`}</li>\n    </ul>\n    <p>{`Return:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`throttledValue`}</inlineCode>{`:`}</strong>{` throttled value.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`flush`}</inlineCode>{`:`}</strong>{` flush funciton. The `}<inlineCode parentName=\"li\">{`finalValue`}</inlineCode>{` will be returned as `}<inlineCode parentName=\"li\">{`throttledValue`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`cancel`}</inlineCode>{`:`}</strong>{` cancel throttle timer.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Example mdxType=\"Example\" />\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React, { useState } from \"react\";\nimport { useThrottledValue } from \"@fedlinker/hooks\";\n\nfunction Example() {\n  const [value, setValue] = useState(\"\");\n  const [throttledValue, { flush }] = useThrottledValue(value, 1000);\n\n  return (\n    <div>\n      <input\n        value={value}\n        onChange={(event) => setValue(event.target.value)}\n        placeholder=\"Please input...\"\n      />\n      <button onClick={() => flush()}>Ok</button>\n      <div>Throttled value: {throttledValue}</div>\n    </div>\n  );\n}\n\nexport default Example;\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}