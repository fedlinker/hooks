{"version":3,"sources":["webpack:///../docs/useRaf.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"oQASaA,G,UAAe,S,iMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,UADR,UAGA,+EAA8D,6BAAGC,WAAW,KAAQ,CAChF,KAAQ,kFADkD,yBAA9D,KAGA,iBAAQ,CACN,GAAM,SADR,SAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,yLAQL,gCACA,sBACE,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAK,0BAAYA,WAAW,UAAvB,MAAxB,KAApB,0CAAwJ,0BAAYA,WAAW,MAAvB,cAAxJ,sDACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAK,0BAAYA,WAAW,UAAvB,YAAxB,KAApB,+DAAmL,0BAAYA,WAAW,MAAvB,YAAnL,2FAAoU,0BAAYA,WAAW,MAAvB,oBAApU,mBACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAK,0BAAYA,WAAW,UAAvB,sBAAxB,KAApB,0CAAwK,0BAAYA,WAAW,MAAvB,SAAxK,cACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAK,0BAAYA,WAAW,UAAvB,oBAAxB,KAApB,wDAEF,gCACA,sBACE,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAK,0BAAYA,WAAW,UAAvB,SAAxB,KAApB,qBACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAK,0BAAYA,WAAW,UAAvB,UAAxB,KAApB,uBAEF,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAASD,QAAQ,YACjB,uBAAK,gCAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,+wC,+LAyDTJ,EAAWK,gBAAiB","file":"component---docs-use-raf-mdx-1d6be9e8897bb6439657.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/liweisheng/Projects/fedlinker/hooks/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport Example from \"./examples/Raf\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"useraf\"\n    }}>{`useRaf`}</h1>\n    <p>{`Use this hook to handle with JavaScript animation with `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame\"\n      }}>{`requestAnimationFrame`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`function useRaf(\n  fn: (percentage: number) => void,\n  duration?: number,\n  options?: { imperative?: boolean; disabled?: boolean }\n): [start: () => void, cancel: () => void];\n`}</code></pre>\n    <p>{`Params:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`fn`}</inlineCode>{`:`}</strong>{` function expected to be executed. The `}<inlineCode parentName=\"li\">{`percentage`}</inlineCode>{` parameter indicates the percentage of time spent.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`duration`}</inlineCode>{`:`}</strong>{` time of animation, in milliseconds, default is 0. When the `}<inlineCode parentName=\"li\">{`duration`}</inlineCode>{` changes, it will cancel previous animation automatically, and start a new animation if `}<inlineCode parentName=\"li\">{`options.disabled`}</inlineCode>{` is not truthy.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`options.imperative`}</inlineCode>{`:`}</strong>{` start animation manually by using the `}<inlineCode parentName=\"li\">{`start`}</inlineCode>{` function.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`options.disabled`}</inlineCode>{`:`}</strong>{` disable animation, will cancel previous animation.`}</li>\n    </ul>\n    <p>{`Return:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`start`}</inlineCode>{`:`}</strong>{` start animation.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`cancel`}</inlineCode>{`:`}</strong>{` cancel animation.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Example mdxType=\"Example\" />\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React, { useState } from \"react\";\nimport { useRaf } from \"@fedlinker/hooks\";\n\nfunction Example() {\n  const [imperative, setImperative] = useState(true);\n  const [disabled, setDisabled] = useState(false);\n  const [duration, setDuration] = useState(1000);\n\n  const [percentage, setPercentage] = useState(0);\n  const [start, cancel] = useRaf(setPercentage, duration, {\n    imperative,\n    disabled,\n  });\n\n  return (\n    <>\n      <button onClick={start}>Start</button>\n      <button onClick={cancel}>Cancel</button>\n      <button\n        onClick={() => {\n          setDuration(Math.round(Math.random() * 10000));\n        }}\n      >\n        Random duration time\n      </button>\n      <input\n        type=\"checkbox\"\n        checked={imperative}\n        onChange={(event) => {\n          setImperative(event.target.checked);\n        }}\n      /> Imperative\n      <input\n        type=\"checkbox\"\n        checked={disabled}\n        onChange={(event) => {\n          setDisabled(event.target.checked);\n        }}\n      />{\" \"}\n      Disabled\n      <br />\n      Duration time: {duration}. Progress:{\" \"}\n      <progress max=\"100\" value={percentage * 100}>\n        {percentage * 100}\n      </progress>\n    </>\n  );\n}\n\nexport default Example;\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}