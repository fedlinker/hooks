{"version":3,"sources":["webpack:///../docs/useSessionStorage.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"oQASaA,G,UAAe,S,4MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,qBADR,qBAGA,mDACA,iBAAQ,CACN,GAAM,SADR,SAGA,uBAAK,gCAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,oRAiBL,gCACA,sBACE,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAK,0BAAYA,WAAW,UAAvB,OAAxB,KAApB,wBACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAK,0BAAYA,WAAW,UAAvB,gBAAxB,KAApB,+BAAuJ,0BAAYA,WAAW,MAAvB,OAAvJ,8BACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAK,0BAAYA,WAAW,UAAvB,qBAAxB,KAApB,uCAAoK,0BAAYA,WAAW,MAAvB,kBAApK,KACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAK,0BAAYA,WAAW,UAAvB,uBAAxB,KAApB,yCAAwK,0BAAYA,WAAW,MAAvB,cAAxK,MAEF,gCACA,sBACE,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAK,0BAAYA,WAAW,UAAvB,SAAxB,KAApB,oBAAqI,0BAAYA,WAAW,MAAvB,uBAArI,YAAkN,0BAAYA,WAAW,MAAvB,QAAlN,WAA+Q,0BAAYA,WAAW,MAAvB,OAA/Q,qCAAqW,0BAAYA,WAAW,MAAvB,gBAArW,sBACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAK,0BAAYA,WAAW,UAAvB,OAAxB,KAApB,4CACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAK,0BAAYA,WAAW,UAAvB,UAAxB,KAApB,8CAEF,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAASD,QAAQ,YACjB,uBAAK,gCAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,mf,0MA6BTJ,EAAWK,gBAAiB","file":"component---docs-use-session-storage-mdx-8dd3f7bbf35bd5bbcbbf.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/liweisheng/Projects/fedlinker/hooks/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport Example from \"./examples/SessionStorage\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"usesessionstorage\"\n    }}>{`useSessionStorage`}</h1>\n    <p>{`Get or set sessionStorage.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`function useSessionStorage<T = any>(\n  key: string,\n  defaultValue?: T,\n  options?: {\n    serialize?: (value: T) => string;\n    deserialize?: (raw: string) => T;\n  }\n): [\n  value: T | null,\n  {\n    set: (newValue: T) => void;\n    remove: () => void;\n  }\n];\n`}</code></pre>\n    <p>{`Params:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`key`}</inlineCode>{`:`}</strong>{` sessionStorage key.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`defaultValue`}</inlineCode>{`:`}</strong>{` the default value when the `}<inlineCode parentName=\"li\">{`key`}</inlineCode>{` is not in sessionStorage.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`options.serialize`}</inlineCode>{`:`}</strong>{` serialization function, default is `}<inlineCode parentName=\"li\">{`JSON.stringify`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`options.deserialize`}</inlineCode>{`:`}</strong>{` deserialization function, default is `}<inlineCode parentName=\"li\">{`JSON.parse`}</inlineCode>{`.`}</li>\n    </ul>\n    <p>{`Return:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`value`}</inlineCode>{`:`}</strong>{` parsed value by `}<inlineCode parentName=\"li\">{`options.deserialize`}</inlineCode>{`. Return `}<inlineCode parentName=\"li\">{`null`}</inlineCode>{` if the `}<inlineCode parentName=\"li\">{`key`}</inlineCode>{` is not in sessionStorage and the `}<inlineCode parentName=\"li\">{`defaultValue`}</inlineCode>{` is not presented.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`set`}</inlineCode>{`:`}</strong>{` the function of setting sessionStorage.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`remove`}</inlineCode>{`:`}</strong>{` the function of removing sessionStorage.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Example mdxType=\"Example\" />\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from \"react\";\nimport { useSessionStorage } from \"@fedlinker/hooks\";\n\nfunction Example() {\n  const [value, { set, remove }] = useSessionStorage(\"random\", 0);\n\n  function handleSetClick() {\n    set(Math.round(Math.random() * 10));\n  }\n\n  return (\n    <>\n      <button onClick={handleSetClick}>\n        Set random number in sessionStorage\n      </button>\n      <button onClick={remove}>Remove</button>\n      {value}\n    </>\n  );\n}\n\nexport default Example;\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}