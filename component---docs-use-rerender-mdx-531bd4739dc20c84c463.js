(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{f5X1:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return i})),t.d(n,"default",(function(){return s}));var r=t("Fcif"),a=t("+I+c"),o=(t("mXGw"),t("/FXl")),c=t("TjRS"),u=t("+B70"),i=(t("aD51"),{});void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/useRerender.mdx"}});var l={_frontmatter:i},b=c.a;function s(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)(b,Object(r.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"usererender"},"useRerender"),Object(o.b)("p",null,"This hook return a function that you can use to rerender the component. It is usually used to rerender mutable data."),Object(o.b)("h2",{id:"usage"},"Usage"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"function useRerender(): () => void;\n")),Object(o.b)("h2",{id:"example"},"Example"),Object(o.b)(u.a,{mdxType:"Example"}),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-tsx"}),'import React from "react";\nimport { useRerender } from "@fedlinker/hooks";\n\nlet count = 0;\n\nfunction Example() {\n  const rerender = useRerender();\n\n  function handleClick() {\n    count++;\n    rerender();\n  }\n\n  return (\n    <>\n      <button onClick={handleClick}>+1</button> {count}\n    </>\n  );\n}\n\nexport default Example;\n')))}void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/useRerender.mdx"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-use-rerender-mdx-531bd4739dc20c84c463.js.map