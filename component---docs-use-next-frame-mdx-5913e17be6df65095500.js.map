{"version":3,"sources":["webpack:///../docs/useNextFrame.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"oQASaA,G,UAAe,S,uMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,gBADR,gBAGA,mDAAkC,0BAAYC,WAAW,KAAvB,MAAlC,mGACA,iBAAQ,CACN,GAAM,SADR,SAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,uJAOL,gCACA,sBACE,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAK,0BAAYA,WAAW,UAAvB,MAAxB,KAApB,sCACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAK,0BAAYA,WAAW,UAAvB,sBAAxB,KAApB,sCAAoK,0BAAYA,WAAW,MAAvB,MAApK,mCACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAK,0BAAYA,WAAW,UAAvB,oBAAxB,KAApB,wBAAoJ,0BAAYA,WAAW,MAAvB,MAApJ,cAEF,gCACA,sBACE,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAK,0BAAYA,WAAW,UAAvB,SAAxB,KAApB,8BAA+I,0BAAYA,WAAW,MAAvB,MAA/I,qCACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAK,0BAAYA,WAAW,UAAvB,UAAxB,KAApB,uBAEF,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAASD,QAAQ,YACjB,uBAAK,gCAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,+rC,qMA8DTJ,EAAWK,gBAAiB","file":"component---docs-use-next-frame-mdx-5913e17be6df65095500.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/liweisheng/Projects/fedlinker/hooks/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport Example from \"./examples/NextFrame\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"usenextframe\"\n    }}>{`useNextFrame`}</h1>\n    <p>{`This hook ensures that the `}<inlineCode parentName=\"p\">{`fn`}</inlineCode>{` function is invoked after the current browser painting. Usually used to perform CSS animation.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`function useNextFrame(\n  fn: () => void,\n  options?: { imperative?: boolean; disabled?: boolean }\n): [start: () => void, cancel: () => void];\n`}</code></pre>\n    <p>{`Params:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`fn`}</inlineCode>{`:`}</strong>{` function expected to be executed.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`options.imperative`}</inlineCode>{`:`}</strong>{` disable automatically calling the `}<inlineCode parentName=\"li\">{`fn`}</inlineCode>{` when the component is mounted.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`options.disabled`}</inlineCode>{`:`}</strong>{` disable calling the `}<inlineCode parentName=\"li\">{`fn`}</inlineCode>{` anytime.`}</li>\n    </ul>\n    <p>{`Return:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`start`}</inlineCode>{`:`}</strong>{` set a timer to excute the `}<inlineCode parentName=\"li\">{`fn`}</inlineCode>{` function after current painting.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`cancel`}</inlineCode>{`:`}</strong>{` cancel the timer.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Example mdxType=\"Example\" />\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React, { useState } from \"react\";\nimport { useNextFrame, useTimeout } from \"@fedlinker/hooks\";\n\nconst duration = 1000;\n\nfunction Example() {\n  const [display, setDisplay] = useState(false);\n  const [visible, setVisible] = useState(false);\n\n  const [startVisible, cancelVisible] = useNextFrame(\n    () => {\n      setVisible(true);\n    },\n    { imperative: true }\n  );\n\n  const [startHide, cancelHide] = useTimeout(\n    () => {\n      setDisplay(false);\n    },\n    duration,\n    { imperative: true }\n  );\n\n  function handleShowClick() {\n    cancelHide();\n    setDisplay(true);\n    startVisible();\n  }\n\n  function handleHideClick() {\n    cancelVisible();\n    setVisible(false);\n    startHide();\n  }\n\n  return (\n    <div>\n      <button onClick={handleShowClick}>Show</button>\n      <button onClick={handleHideClick}>Hide</button>\n      <div\n        style={{\n          display: display ? \"block\" : \"none\",\n          opacity: visible ? 1 : 0,\n          transition: \\`opacity ease \\${duration / 1000}s\\`,\n          width: 100,\n          height: 100,\n          backgroundColor: \"cyan\",\n        }}\n      ></div>\n    </div>\n  );\n}\n\nexport default Example;\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}