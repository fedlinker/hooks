(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{"Emg+":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return m}));var a=n("Fcif"),i=n("+I+c"),r=(n("mXGw"),n("/FXl")),l=n("TjRS"),o=n("N/nj"),c=(n("aD51"),{});void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/useInterval.mdx"}});var b={_frontmatter:c},s=l.a;function m(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)(s,Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"useinterval"},"useInterval"),Object(r.b)("p",null,"Handle with interval timer."),Object(r.b)("h2",{id:"usage"},"Usage"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"function useInterval(\n  fn: () => void,\n  ms?: number,\n  options?: { imperative?: boolean; disabled?: boolean }\n): [start: () => void, cancel: () => void];\n")),Object(r.b)("p",null,"Params:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"fn"),":")," function expected to be executed."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"ms"),":")," interval time, in milliseconds, default is 0. When the ",Object(r.b)("inlineCode",{parentName:"li"},"ms")," changes, it will clear previous timer automatically, and set a new timer if ",Object(r.b)("inlineCode",{parentName:"li"},"options.disabled")," is not truthy."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"options.imperative"),":")," set timer manually by using the ",Object(r.b)("inlineCode",{parentName:"li"},"start")," function."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"options.disabled"),":")," disable timer, will clear previous timer.")),Object(r.b)("p",null,"Return:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"start"),":")," the funciton of setting timer."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"cancel"),":")," the funciton of cancelling timer.")),Object(r.b)("h2",{id:"example"},"Example"),Object(r.b)(o.a,{mdxType:"Example"}),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx"}),'import React, { useState } from "react";\nimport { useInterval } from "@fedlinker/hooks";\n\nfunction Example() {\n  const [imperative, setImperative] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n  const [ms, setMs] = useState(1000);\n\n  const [count, setCount] = useState(0);\n  const [start, cancel] = useInterval(\n    () => {\n      setCount((count) => ++count);\n    },\n    ms,\n    { imperative, disabled }\n  );\n\n  return (\n    <>\n      <button onClick={start}>Start</button>\n      <button onClick={cancel}>Cancel</button>\n      <button\n        onClick={() => {\n          setMs(Math.round(Math.random() * 10000));\n        }}\n      >\n        Random interval time\n      </button>\n      <input\n        type="checkbox"\n        checked={imperative}\n        onChange={(event) => {\n          setImperative(event.target.checked);\n        }}\n      /> Imperative\n      <input\n        type="checkbox"\n        checked={disabled}\n        onChange={(event) => {\n          setDisabled(event.target.checked);\n        }}\n      />{" "}\n      Disabled\n      <br />\n      Interval time: {ms}. Count: {count}\n    </>\n  );\n}\n\nexport default Example;\n')))}void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/useInterval.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-use-interval-mdx-c496ff3e9bd932c5a2e3.js.map